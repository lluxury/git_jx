#!/bin/bash

# 从环境变量读取 AWS AK/SK
AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
REGION="your-region"  # 替换为你的区域，例如 us-east-1
LB_NAME="your-load-balancer-name"  # 替换为你的负载均衡器名称
SECURITY_GROUP_ID="your-security-group-id"  # 替换为要检查的安全组 ID

# 设置 AWS CLI 环境变量
export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY
export AWS_DEFAULT_REGION="$REGION"

# 检查安全组并添加
check_and_add_security_group() {
    # 获取当前负载均衡器的安全组列表
    current_sg_ids=$(aws elbv2 describe-load-balancers --names "$LB_NAME" --query "LoadBalancers[0].SecurityGroups[]" --output text)

    # 检查安全组是否已经存在
    if [[ ! $current_sg_ids =~ $SECURITY_GROUP_ID ]]; then
        echo "安全组 $SECURITY_GROUP_ID 不在负载均衡器 $LB_NAME 上，正在添加..."
        aws elbv2 modify-load-balancer-attributes --load-balancer-arn "$(aws elbv2 describe-load-balancers --names "$LB_NAME" --query "LoadBalancers[0].LoadBalancerArn" --output text)" --security-groups "$current_sg_ids $SECURITY_GROUP_ID"
        echo "安全组 $SECURITY_GROUP_ID 已成功添加。"
    else
        echo "安全组 $SECURITY_GROUP_ID 已经存在于负载均衡器 $LB_NAME 上。"
    fi
}

while true; do
    check_and_add_security_group
    sleep 600  # 每 10 分钟检查一次
done
使用说明
替换占位符：将脚本中的 your-region、your-load-balancer-name 和 your-security-group-id 替换为实际的值。
设置环境变量：确保在运行脚本之前设置好 AWS 的 Access Key 和 Secret Key：
bash
export AWS_ACCESS_KEY_ID="your_access_key_id"
export AWS_SECRET_ACCESS_KEY="your_secret_access_key"
授予执行权限：给予脚本执行权限：
bash
chmod +x script.sh
运行脚本：执行脚本：
bash
./script.sh






#!/bin/bash

# 从环境变量读取 AWS AK/SK
AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
REGION="your-region"  # 替换为你的区域，例如 us-east-1
LB_NAME="your-load-balancer-name"  # 替换为你的负载均衡器名称
SECURITY_GROUP_ID="your-security-group-id"  # 替换为要检查的安全组 ID

# 设置 AWS CLI 环境变量
export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY
export AWS_DEFAULT_REGION="$REGION"

# 检查安全组并添加
check_and_add_security_group() {
    # 获取当前负载均衡器的安全组列表
    current_sg_ids=$(aws elbv2 describe-load-balancers --names "$LB_NAME" --query "LoadBalancers[0].SecurityGroups[]" --output text)

    # 检查安全组是否已经存在
    IFS=' ' read -r -a sg_array <<< "$current_sg_ids"
    found=false

    for sg_id in "${sg_array[@]}"; do
        if [[ "$sg_id" == "$SECURITY_GROUP_ID" ]]; then
            found=true
            break
        fi
    done

    if [ "$found" = false ]; then
        echo "安全组 $SECURITY_GROUP_ID 不在负载均衡器 $LB_NAME 上，正在添加..."
        aws elbv2 modify-load-balancer-attributes --load-balancer-arn "$(aws elbv2 describe-load-balancers --names "$LB_NAME" --query "LoadBalancers[0].LoadBalancerArn" --output text)" --security-groups "$current_sg_ids $SECURITY_GROUP_ID"
        echo "安全组 $SECURITY_GROUP_ID 已成功添加。"
    else
        echo "安全组 $SECURITY_GROUP_ID 已经存在于负载均衡器 $LB_NAME 上。"
    fi
}

while true; do
    check_and_add_security_group
    sleep 600  # 每 10 分钟检查一次
done





#!/bin/bash

# Define variables
LOAD_BALANCER_ARN="arn:aws:elasticloadbalancing:region:account-id:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
SECURITY_GROUP_IDS=("sg-0123456789abcdef0" "sg-0abcdef1234567890")

# Set security groups
aws elbv2 set-security-groups \
    --load-balancer-arn "$LOAD_BALANCER_ARN" \
    --security-groups "${SECURITY_GROUP_IDS[@]}"
