---
Metadata:
  TemplateId: "arn:aws:cloudformation:ap-southeast-1:301179689533:generatedTemplate/940da2b3-c640-47f3-8e90-72f9a11ea805"
Resources:
  CloudFrontOriginRequestPolicy00775133bc15f249f9abeaafb2e0bf67d200HFzLV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy for Elemental MediaTailor Origin"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "origin"
          - "access-control-request-headers"
          - "x-forwarded-for"
          - "access-control-request-method"
          - "user-agent"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-Elemental-MediaTailor-PersonalizedManifests"
  CloudFrontCachePolicy004135ea2d6df844a39df34b5a84be39ad000EcOm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy with caching disabled"
        MinTTL: 0
        MaxTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: false
        DefaultTTL: 0
        Name: "Managed-CachingDisabled"
  CloudFrontOriginRequestPolicy00acba4595bd2849b8b9fe13317c0390fa00AqmmF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "none"
        Comment: "Policy to forward user-agent and referer headers to origin"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "referer"
          - "user-agent"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-UserAgentRefererHeaders"
  CloudFrontCachePolicy002e54312d136d493c8eb9b001f22f67d200M8apB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy for Amplify Origin"
        MinTTL: 2
        MaxTTL: 600
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "all"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "Authorization"
            - "CloudFront-Viewer-Country"
            - "Host"
          CookiesConfig:
            CookieBehavior: "all"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 2
        Name: "Managed-Amplify"
  CloudFrontOriginRequestPolicy0088a5eaf42fd44709b370b4c650ea3fcf00vjPaZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "none"
        Comment: "Policy for S3 origin with CORS"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "origin"
          - "access-control-request-headers"
          - "access-control-request-method"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-CORS-S3Origin"
  CloudFrontOriginRequestPolicy0059781a5b390341f3afcbaf62929ccde100wnSLY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "none"
        Comment: "Policy for custom origin with CORS"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "origin"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-CORS-CustomOrigin"
  CloudFrontDistribution00E1GT3F89HSAPDD00kyB1q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::Distribution"
    DeletionPolicy: "Retain"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: ""
        Origins:
        - ConnectionTimeout: 10
          OriginAccessControlId: ""
          ConnectionAttempts: 3
          OriginCustomHeaders: []
          DomainName: "test.yann.com"
          OriginShield:
            Enabled: false
          OriginPath: ""
          Id: "test.yann.com"
          CustomOriginConfig:
            OriginKeepaliveTimeout: 5
            OriginReadTimeout: 30
            OriginSSLProtocols:
            - "SSLv3"
            - "TLSv1"
            - "TLSv1.1"
            - "TLSv1.2"
            HTTPSPort: 443
            HTTPPort: 80
            OriginProtocolPolicy: "http-only"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1"
          SslSupportMethod: "vip"
          CloudFrontDefaultCertificate: true
        PriceClass: "PriceClass_All"
        DefaultCacheBehavior:
          Compress: true
          TrustedKeyGroups: []
          FunctionAssociations: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          CachedMethods:
          - "HEAD"
          - "GET"
          LambdaFunctionAssociations: []
          SmoothStreaming: false
          TargetOriginId: "test.yann.com"
          ViewerProtocolPolicy: "allow-all"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600Jri5B"
          TrustedSigners: []
          FieldLevelEncryptionId: ""
        Staging: false
        CustomErrorResponses: []
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases: []
        IPV6Enabled: true
        WebACLId: ""
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"
        CacheBehaviors: []
  CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300jlmN1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy to forward all parameters in viewer requests"
        HeadersConfig:
          HeaderBehavior: "allViewer"
        CookiesConfig:
          CookieBehavior: "all"
        Name: "Managed-AllViewer"
  CloudFrontOriginRequestPolicy00b689b0a853d040abbaf268738e2966ac001OOOL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy to forward all parameters in viewer requests except for the\
          \ Host header"
        HeadersConfig:
          HeaderBehavior: "allExcept"
          Headers:
          - "host"
        CookiesConfig:
          CookieBehavior: "all"
        Name: "Managed-AllViewerExceptHostHeader"
  CloudFrontOriginRequestPolicy0033f36d7ef39646d990e052428a34d9dc00MowVn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy to forward all parameters in viewer requests and all CloudFront\
          \ headers as of June 2022"
        HeadersConfig:
          HeaderBehavior: "allViewerAndWhitelistCloudFront"
          Headers:
          - "CloudFront-Viewer-Time-Zone"
          - "CloudFront-Viewer-Address"
          - "CloudFront-Viewer-Country"
          - "CloudFront-Is-IOS-Viewer"
          - "CloudFront-Is-Tablet-Viewer"
          - "CloudFront-Forwarded-Proto"
          - "CloudFront-Viewer-Country-Name"
          - "CloudFront-Is-Mobile-Viewer"
          - "CloudFront-Is-SmartTV-Viewer"
          - "CloudFront-Viewer-Country-Region"
          - "CloudFront-Is-Android-Viewer"
          - "CloudFront-Viewer-Country-Region-Name"
          - "CloudFront-Viewer-City"
          - "CloudFront-Viewer-Latitude"
          - "CloudFront-Viewer-Longitude"
          - "CloudFront-Viewer-Http-Version"
          - "CloudFront-Viewer-Postal-Code"
          - "CloudFront-Viewer-ASN"
          - "CloudFront-Is-Desktop-Viewer"
          - "CloudFront-Viewer-Metro-Code"
          - "CloudFront-Viewer-TLS"
        CookiesConfig:
          CookieBehavior: "all"
        Name: "Managed-AllViewerAndCloudFrontHeaders-2022-06"
  CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600Jri5B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy with caching enabled. Supports Gzip and Brotli compression."
        MinTTL: 1
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 86400
        Name: "Managed-CachingOptimized"
  CloudFrontCachePolicy000862726205a94f769dedb50ca2e3a84f00lrLS7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy for Elemental MediaPackage Origin"
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStrings:
            - "aws.manifestfilter"
            - "start"
            - "end"
            - "m"
            QueryStringBehavior: "whitelist"
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "origin"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 86400
        Name: "Managed-Elemental-MediaPackage"
  CloudFrontCachePolicy00b2884449e4de46a7ac3670bc7f1ddd6d00fRNo4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Default policy when compression is disabled"
        MinTTL: 1
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: false
        DefaultTTL: 86400
        Name: "Managed-CachingOptimizedForUncompressedObjects"













# -* encoding:utf-8 -*-
from collections import OrderedDict

import yaml
import yamlparser

def get_file():
    path = 'load.yml'
    result2 = yamlparser.ordered_yaml_load(path)
    # print(type(result2["p1"]))
    # print(type(result2["p8"]))
    # print(result2["p8"][0]["xx1"]) # 1 x
    return(result2)

def modify_file(result2):
    result2["p8"][0]["xx1"]= "1000"
    #print(result2["p8"][0]["xx1"])

# dumpfile = open('dump.yml', 'w')
# res2 = yamlparser.ordered_yaml_dump(result2,dumpfile, default_flow_style=False)
# dumpfile.close()

def write_file(result2):
    with open('dump1.yml','w') as file1:
        res2 = yamlparser.ordered_yaml_dump(result2,file1, default_flow_style=False)

result2=get_file()
modify_file(result2)
write_file(result2)
print("end")


# -* encoding:utf-8 -*-
from collections import OrderedDict
import yaml
import os


def ordered_yaml_load(yaml_path, Loader=yaml.Loader,
                      object_pairs_hook=OrderedDict):
    class OrderedLoader(Loader):
        pass

    def construct_mapping(loader, node):
        loader.flatten_mapping(node)
        return object_pairs_hook(loader.construct_pairs(node))

    OrderedLoader.add_constructor(
        yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG,
        construct_mapping)
    with open(yaml_path) as stream:
        return yaml.load(stream, OrderedLoader)


def ordered_yaml_dump(data, stream=None, Dumper=yaml.SafeDumper, **kwds):
    class OrderedDumper(Dumper):
        pass

    def _dict_representer(dumper, data):
        return dumper.represent_mapping(
            yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG,
            data.items())

    OrderedDumper.add_representer(OrderedDict, _dict_representer)
    return yaml.dump(data, stream, OrderedDumper, **kwds)
